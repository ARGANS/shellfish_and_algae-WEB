proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;



upstream api_upstream {
	# server api_host:50080;
	server 10.88.2.42:50080;
}

server {
	listen       80 default_server;
	listen       [::]:80 default_server;
	server_name localhost 127.0.0.1;
	return       301 https://$host$request_uri;
}

server {
	listen       443 ssl http2 default_server;
	listen       [::]:443 ssl http2 default_server;
	server_name localhost 127.0.0.1;
	root         /usr/share/nginx/html;

	ssl_certificate "/etc/nginx/conf.d/certs/public.crt";
	ssl_certificate_key "/etc/nginx/conf.d/certs/private.key";
	ssl_session_cache shared:SSL:1m;
	ssl_session_timeout  10m;
	## Causes `SSL_CTX_set_cipher_list("PROFILE=SYSTEM") failed`
	## ssl_ciphers PROFILE=SYSTEM;
	ssl_prefer_server_ciphers on;

	gzip on;
	gzip_types text/css application/javascript application/json image/svg+xml;
	gzip_comp_level 9;
	etag on;
	# This hides the specific version of NGINX from the Server header and error pages:
	server_tokens off;


	location /rest {
		rewrite /rest/(.*) /$1  break;
		proxy_pass http://api_upstream;
		proxy_redirect off;
		proxy_hide_header X-Powered-By;
	}

	location / {
		try_files $uri $uri.html $uri/ =404;
	}

	error_page 404 = @404;
    location @404 {
        return 404 "__Not Found__\n";
    }

    location /test {
      add_header Content-Type text/html;
      return 200 "port:$server_port";
    }

	# TODO
	# location /private {
	#   auth_request /auth;
	#   return 200 "private page";
	# }
    # location /auth {
    #   internal;
    #   proxy_pass http://dashboard:8000/api/v1/auth;
    #   proxy_pass_request_body off; # no need of the body
    #   proxy_set_header Content-Length "";
    #   proxy_set_header X-Original-URI $request_uri; # we will use the info to do more validation
    # }

		# if not valid:
		#     return web.Response(status=403, body="Forbiden. You must be logged in.")
		# else:
		#     return web.Response(status=200, body="User authenticated")
			


}
